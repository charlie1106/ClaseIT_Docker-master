// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TiendaServicios.Api.Autor.Persistencia;

#nullable disable

namespace TiendaServicios.Api.Autor.Migrations
{
    [DbContext(typeof(ContextoCantante))]
    [Migration("20220423125735_IniciarBD")]
    partial class IniciarBD
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TiendaServicios.Api.Autor.Modelo.Cantante", b =>
                {
                    b.Property<int>("IdCantante")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdCantante"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("IdCantante");

                    b.ToTable("Cantantes");
                });

            modelBuilder.Entity("TiendaServicios.Api.Autor.Modelo.GradoMusical", b =>
                {
                    b.Property<int>("IdEscuelaMusica")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdEscuelaMusica"));

                    b.Property<int>("CantanteIdCantante")
                        .HasColumnType("integer");

                    b.Property<string>("GradosMusicales")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaGrado")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NombreEscuela")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("IdEscuelaMusica");

                    b.HasIndex("CantanteIdCantante");

                    b.ToTable("GradosMusicales");
                });

            modelBuilder.Entity("TiendaServicios.Api.Autor.Modelo.GradoMusical", b =>
                {
                    b.HasOne("TiendaServicios.Api.Autor.Modelo.Cantante", "Cantante")
                        .WithMany("GradosMusicales")
                        .HasForeignKey("CantanteIdCantante")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cantante");
                });

            modelBuilder.Entity("TiendaServicios.Api.Autor.Modelo.Cantante", b =>
                {
                    b.Navigation("GradosMusicales");
                });
#pragma warning restore 612, 618
        }
    }
}
